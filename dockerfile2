FROM ubuntu:14.04
MAINTAINER 

WORKDIR /
COPY /mnt/c/Users/503086913/Desktop/package.json .
COPY /mnt/c/Users/503086913/Desktop/buildLocal.sh .

RUN apt-get update
RUN apt-get -qq update
RUN apt-get install -y nodejs npm
RUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10
RUN cd /data && npm install

EXPOSE 8888

CMD ["npm", "start"]

RUN npm config set strict-ssl false
RUN jspm config strictSSL false
RUN node --version
RUN npm --version
RUN bower install --allow-root --force-latest

 
FROM ubuntu:14.04
MAINTAINER 

WORKDIR /
COPY /mnt/c/Users/503086913/Desktop/package.json .
COPY /mnt/c/Users/503086913/Desktop/buildLocal.sh .

RUN apt-get update
RUN apt-get -qq update
RUN apt-get install -y nodejs npm
RUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10
RUN cd /data && npm install

EXPOSE 8888

CMD ["npm", "start"]

RUN npm config set strict-ssl false
RUN jspm config strictSSL false
RUN node --version
RUN npm --version
RUN bower install --allow-root --force-latest

 



{
  "name": "OO-Contract-Management",
  "version": "1.0.0",
  "repository": "",
  "private": true,
  "engines": {
    "node": ">=6.0.0"
  },
  "main": "app.js",
  "jspm": {
    "directories": {
      "baseURL": "public"
    },
    "dependencies": {
      "angular": "github:angular/bower-angular@^1.4.0",
      "angular-animate": "npm:angular-animate@1.4.1",
      "angular-sanitize": "github:angular/bower-angular-sanitize@^1.5.6",
      "angular-translate": "github:angular-translate/bower-angular-translate@^2.11.0",
      "angular-translate-loader-static-files": "github:angular-translate/bower-angular-translate-loader-static-files@^2.12.0",
      "angular-ui-bootstrap": "npm:angular-ui-bootstrap@^1.2.5",
      "angular-ui-router": "github:angular-ui/ui-router@^0.2.15",
      "babel": "npm:babel-core@^5.8.38",
      "hubs/ng-apphub-service": "",
      "lodash": "npm:lodash@^4.16.5",
      "moment": "github:moment/moment@^2.15.2",
      "sockJs": "npm:sockjs-client@1.1.4",
      "socket.io": "npm:socket.io@^1.5.1",
      "stompJs": "npm:stompjs@2.3.3",
      "text": "github:systemjs/plugin-text@^0.0.9"
    },
    "devDependencies": {
      "babel": "npm:babel-core@^5.8.38",
      "babel-runtime": "npm:babel-runtime@^5.8.38",
      "core-js": "npm:core-js@^1.2.7"
    }
  },
  "keywords": [
    "operations optimization",
    "predix apm application",
    "contract management"
  ],
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-polyfill": "^6.16.0",
    "babel-preset-es2015": "^6.18.0",
    "bower": "^1.8.2",
    "cdnizer": "^1.1.6",
    "chai": "^3.5.0",
    "chai-shallow-deep-equal": "^1.4.4",
    "del": "^2.2.2",
    "eslint": "^3.9.1",
    "eslint-config-airbnb": "^12.0.0",
    "eslint-config-airbnb-base": "^9.0.0",
    "eslint-config-standard": "^6.2.1",
    "eslint-plugin-html": "^1.7.0",
    "eslint-plugin-import": "^2.1.0",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-promise": "^3.4.1",
    "eslint-plugin-react": "^6.4.1",
    "eslint-plugin-standard": "^2.0.1",
    "fs-extra": "^1.0.0",
    "gulp": "^3.9.1",
    "gulp-angular-templatecache": "^2.2.0",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-bower": "0.0.13",
    "gulp-cheerio": "^0.6.3",
    "gulp-clean-css": "^2.4.0",
    "gulp-cssnano": "^2.1.2",
    "gulp-debounced-watch": "^1.0.4",
    "gulp-develop-server": "^0.5.2",
    "gulp-eslint": "^3.0.1",
    "gulp-html-replace": "^1.6.2",
    "gulp-jshint": "^2.0.4",
    "gulp-livereload": "^3.8.1",
    "gulp-minify-html": "^1.0.6",
    "gulp-minify-inline": "^0.2.1",
    "gulp-ngdocs": "^0.3.0",
    "gulp-polylint": "^1.0.3",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.4",
    "gulp-replace-task": "^0.11.0",
    "gulp-sass": "^2.3.2",
    "gulp-shell": "^0.5.2",
    "gulp-sourcemaps": "^2.6.4",
    "gulp-style-modules": "^0.1.0",
    "gulp-task-listing": "^1.0.1",
    "gulp-vulcanize": "^6.1.0",
    "gulp-zip": "^4.1.0",
    "istanbul": "^0.4.5",
    "jasmine-core": "^2.5.2",
    "jshint": "^2.9.4",
    "jshint-stylish": "^2.2.1",
    "jspm": "^0.16.53",
    "karma": "^1.7.1",
    "karma-babel-preprocessor": "^6.0.1",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-jasmine": "^1.0.2",
    "karma-jspm": "^2.2.0",
    "karma-junit-reporter": "^1.2.0",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-systemjs": "^0.15.0",
    "merge-stream": "^1.0.1",
    "minimist": "^1.2.0",
    "mocha": "^3.1.2",
    "moment": "^2.15.2",
    "node-dir": "^0.1.16",
    "node-notifier": "^4.6.1",
    "node-sass-import-once": "^1.2.0",
    "nodemon": "^1.15.1",
    "phantomjs": "^1.9.18",
    "phantomjs-prebuilt": "^2.1.13",
   
    "protractor": "^4.0.10",
    "protractor-http-mock": "^0.9.0",
    "require-dir": "^0.3.2",
    "run-sequence": "^1.2.2",
    "s3": "^4.4.0",
    "sinon": "^1.17.6",
    "supertest": "^2.0.1",
    
    "web-component-tester": "^4.0.3",
    "web-component-tester-istanbul": "^0.10.0",
    "yargs": "^7.1.0"
  },
  "dependencies": {
    "apicache": "^0.2.2",
    "body-parser": "^1.15.2",
    "cookie-parser": "^1.4.3",
    "express": "^4.16.2",
    "express-request-proxy": "^2.0.0",
    "graceful-fs": "^4.1.11",
    "http": "0.0.0",
    "i18next": "^3.5.2",
    "i18next-express-middleware": "^1.0.10",
    "karma-chrome-launcher": "^2.0.0",
    "request": "^2.79.0",
    "serve-static": "^1.13.2",
    "socket.io": "^1.5.1"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha test",
    "jspm:bundle": "jspm bundle main public/bundle.js --inject --minify && mv public/bundle* dist/public && cp public/config.js dist/public && jspm unbundle",
    "deploy": "npm test && ./buildLocal.sh"
  }
}


BUILD=$1
VERSION=1.0.0.$BUILD

echo -------------
echo Node version:
node -v
echo -------------
echo ''
echo ------------
echo npm version:
npm -v
echo ------------
echo ''

# npm install
# jspm cache-clear
# jspm install
# bower cache clean
# bower install --force-latest

# Add the build version number in the main.handlebars file for UI to show the build number
# sed -i -e 's/##BUILDVERSION##/'${VERSION}'/g' ./public/index.html

# Run unit tests
# echo ----------------
# echo Running npm test
# echo ----------------
# npm test
# if [ "$?" = "0" ]; then
#	  echo "Unit tests passed!"
# else
#	  echo "Unit tests failed!"
#	  exit 1
# fi

# Generate /dist for Jenkins
gulp sass
gulp dist
cd dist
if [ "$?" = "0" ]; then
  echo "The /dist folder was created successfully. Build finished."

  # Copy static assets to CDN and change template strings
  # echo -----------------
  # echo Running cdnify.js
  # echo -----------------
  # node cdnify.js -v ${VERSION}

else
  echo "The /dist folder could not be created. Build failed."
	exit 1
fi

# Create zip file for artifactory (and Jenkins)
zip -r ../bxjoc-ui-microapp-manual-push.zip *
cd ..
echo "Build Success"
